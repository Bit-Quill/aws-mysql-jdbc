name: 'Release Driver'

on:
  push:
    tags:
      - '*'

permissions:
  actions: write
  contents: write
  deployments: write
  packages: write
  pull-requests: write
  repository-projects: write

jobs:
  ubuntu-latest-aurora-build-and-release:
    name: 'Build And Release Driver'
    runs-on: ubuntu-latest
    steps:
      - name: Setup timezone
        uses: zcong1993/setup-timezone@master
        with:
          timezone: Africa/Lagos
      - name: 'Clone Repository'
        uses: actions/checkout@v2
        with:
          fetch-depth: 50
      - name: 'Set up JDK 8'
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: 'Start Docker MySQL'
        working-directory: docker
        run: docker-compose up -d && docker-compose logs
      - name: 'Build And Run Tests'
        run: |
          ./gradlew --no-parallel --no-daemon build
      - name: Archive junit results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: junit-report
          path: build/reports/tests/
      - name: 'Set Version Env Variable'
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: 'Get Release Details'
        run: |
          export RELEASE_DETAILS="$(awk -vN=2 'n<N;/^## /{++n}' CHANGES)"
          export RELEASE_DETAILS="$(sed '${/^# /d;}' <<< "$RELEASE_DETAILS")"
          export RELEASE_DETAILS="$(sed '$d' <<< "$RELEASE_DETAILS")"
          touch RELEASE_DETAILS.md
          echo "$RELEASE_DETAILS" > RELEASE_DETAILS.md
      - name: 'Import GPG'
        uses: crazy-max/ghaction-import-gpg@v4.1.0
        with:
          gpg-private-key: ${{ secrets.GPG_SECRET_KEY }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: 'Sign Jars'
        run: |
          export GPG_TTY=$(tty)
          for jar in build/libs/*.jar; do gpg --detach-sign --armor $jar; done
      - name: 'Upload to Release'
        uses: ncipollo/release-action@v1.8.10
        with:
          draft: true
          name: "AWS JDBC Driver for MySQL Public Preview - v${{ env.RELEASE_VERSION }}"
          bodyFile: RELEASE_DETAILS.md
          artifacts: build/libs/*
          token: ${{ secrets.GITHUB_TOKEN }}
